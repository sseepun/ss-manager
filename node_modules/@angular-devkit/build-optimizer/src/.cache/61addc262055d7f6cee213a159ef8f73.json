{"remainingRequest":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\collections\\pagination\\components\\pagination.js","dependencies":[{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\collections\\pagination\\components\\pagination.js","mtime":1521243576000},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527053443986},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Component, Input, Output, EventEmitter, HostBinding } from \"@angular/core\";\nvar SuiPagination = /*@__PURE__*/ (function () {\n    function SuiPagination() {\n        this._paginationClasses = true;\n        this.pageChange = new EventEmitter();\n        this.pageSize = 10;\n        this._page = 1;\n        this._pages = [];\n        this.pageCount = 1;\n        this.hasNavigationLinks = true;\n        this.hasBoundaryLinks = false;\n        this.canRotate = false;\n        this.hasEllipses = true;\n    }\n    Object.defineProperty(SuiPagination.prototype, \"maxSize\", {\n        get: function () {\n            return this._maxSize;\n        },\n        set: function (value) {\n            this._maxSize = (value != undefined) ? Math.max(value, 1) : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiPagination.prototype, \"collectionSize\", {\n        get: function () {\n            return this._collectionSize;\n        },\n        set: function (value) {\n            this._collectionSize = Math.max(value, 0);\n            this.pageCount = Math.max(1, Math.ceil(this._collectionSize / this.pageSize));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiPagination.prototype, \"hasNavigationLinks\", {\n        get: function () {\n            var maxSize = this._maxSize || this.pageCount;\n            return this._hasNavigationLinks || maxSize < this.pageCount;\n        },\n        set: function (value) {\n            this._hasNavigationLinks = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiPagination.prototype, \"page\", {\n        get: function () {\n            return this._page;\n        },\n        set: function (value) {\n            this.setPage(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiPagination.prototype, \"pages\", {\n        get: function () {\n            return this._pages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    // Public methods\n    SuiPagination.prototype.hasPrevious =\n        // Public methods\n        function () {\n            return this.page > 1;\n        };\n    SuiPagination.prototype.hasNext = function () {\n        return this.page < this.pageCount;\n    };\n    SuiPagination.prototype.setPage = function (newPage) {\n        var value = (Number.isInteger(newPage)) ? Math.min(Math.max(newPage, 1), this.pageCount) : 1;\n        if (value !== this._page) {\n            this._page = value;\n            this.pageChange.emit(this._page);\n        }\n    };\n    // Lifecycle hooks\n    // Lifecycle hooks\n    SuiPagination.prototype.ngOnChanges =\n        // Lifecycle hooks\n        function () {\n            this.updatePages();\n        };\n    // Private methods\n    // Private methods\n    SuiPagination.prototype.updatePages =\n        // Private methods\n        function () {\n            this.pageCount = Math.max(1, Math.ceil(this._collectionSize / this.pageSize));\n            var _a = this.applyPagination(), start = _a[0], end = _a[1];\n            this._pages = Array(end - start)\n                .fill(start + 1)\n                .map(function (s, i) { return s + i; });\n        };\n    SuiPagination.prototype.applyPagination = function () {\n        var maxSize = (this.maxSize != undefined) ? Math.min(this.maxSize, this.pageCount) : this.pageCount;\n        var page = Math.ceil(this.page / maxSize) - 1;\n        var start = 0;\n        var end = this.pageCount;\n        if (this.canRotate) {\n            var leftOffset = Math.floor(maxSize / 2);\n            var rightOffset = maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n            if (this.page <= leftOffset) {\n                end = maxSize;\n            }\n            else if (this.pageCount - this.page < leftOffset) {\n                start = this.pageCount - maxSize;\n            }\n            else {\n                start = this.page - leftOffset - 1;\n                end = this.page + rightOffset;\n            }\n        }\n        else {\n            start = page * maxSize;\n            end = start + maxSize;\n        }\n        return [start, Math.min(end, this.pageCount)];\n    };\n    return SuiPagination;\n}());\nexport { SuiPagination };\n//# sourceMappingURL=pagination.js.map \n",null]}