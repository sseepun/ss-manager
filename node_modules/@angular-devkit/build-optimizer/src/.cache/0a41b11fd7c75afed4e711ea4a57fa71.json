{"remainingRequest":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\modules\\tabs\\directives\\tab-header.js","dependencies":[{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\modules\\tabs\\directives\\tab-header.js","mtime":1521243577000},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527053443986},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { HostBinding, Input, Directive, EventEmitter, HostListener, Output } from \"@angular/core\";\nvar SuiTabHeader = /*@__PURE__*/ (function () {\n    function SuiTabHeader() {\n        this._isActive = false;\n        this.isActiveChange = new EventEmitter();\n        this.isActiveExternalChange = new EventEmitter();\n        this.onActivate = new EventEmitter();\n        this.onDeactivate = new EventEmitter();\n        this.isDisabled = false;\n        this._headerClasses = true;\n    }\n    Object.defineProperty(SuiTabHeader.prototype, \"isActive\", {\n        get: function () {\n            return this._isActive;\n        },\n        set: function (active) {\n            var _this = this;\n            var isActive = active;\n            // Only used by @Input(), runs whenever user input changes `isActive`.\n            // Run in timeout because `isDisabled` can prohibit user from changing `isActive`.\n            // so update is delayed to avoid 'changed after checked' error.\n            setTimeout(function () {\n                // Only allow change if tab header is not disabled.\n                isActive = !_this.isDisabled ? active : false;\n                _this.setActiveState(isActive);\n                // Fire 'external change' event as user input has occured.\n                // Fire 'external change' event as user input has occured.\n                _this.isActiveExternalChange.emit(isActive);\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiTabHeader.prototype, \"isDisabled\", {\n        get: function () {\n            return this._isDisabled;\n        },\n        set: function (disabled) {\n            // Only update if value provided is different to current one.\n            if (this._isDisabled !== disabled) {\n                this._isDisabled = disabled;\n                // If now disabled, then tab header must be deactivated.\n                if (this.isDisabled) {\n                    this.isActive = false;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Internally update active state.\n    // Internally update active state.\n    SuiTabHeader.prototype.setActiveState =\n        // Internally update active state.\n        function (active) {\n            // If (cast) active value has changed:\n            if (!!this._isActive !== active) {\n                // Update to the new value.\n                this._isActive = active;\n                // Fire the appropriate activation event.\n                if (active) {\n                    this.onActivate.emit();\n                }\n                else {\n                    this.onDeactivate.emit();\n                }\n            }\n            // Regardless, emit a change to `isActive`, so [(isActive)] works correctly.\n            this.isActiveChange.emit(active);\n        };\n    SuiTabHeader.prototype.onClick = function () {\n        if (!this.isDisabled) {\n            // Activate the tab when clicked, so long as it isn't disabled.\n            this.isActive = true;\n        }\n    };\n    return SuiTabHeader;\n}());\nexport { SuiTabHeader };\n//# sourceMappingURL=tab-header.js.map \n",null]}