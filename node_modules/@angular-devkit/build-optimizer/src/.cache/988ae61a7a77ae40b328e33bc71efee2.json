{"remainingRequest":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\modules\\accordion\\components\\accordion.js","dependencies":[{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\modules\\accordion\\components\\accordion.js","mtime":1521243576000},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527053443986},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Component, Input, HostBinding, ContentChildren } from \"@angular/core\";\nimport { SuiAccordionPanel } from \"./accordion-panel\";\nimport { SuiAccordionService } from \"../services/accordion.service\";\nvar SuiAccordion = /*@__PURE__*/ (function () {\n    function SuiAccordion() {\n        // Accordion service is unique to each set of panels.\n        this._service = new SuiAccordionService();\n        this.accordionClasses = true;\n    }\n    Object.defineProperty(SuiAccordion.prototype, \"closeOthers\", {\n        get: function () {\n            return this._service.closeOthers;\n        },\n        set: function (value) {\n            this._service.closeOthers = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiAccordion.prototype, \"transition\", {\n        set: function (transition) {\n            this._service.transition = transition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiAccordion.prototype, \"transitionDuration\", {\n        set: function (duration) {\n            this._service.transitionDuration = duration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SuiAccordion.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.updatePanels();\n        // Reconnect panels after they have updated.\n        this._panels.changes.subscribe(function () { return _this.updatePanels(); });\n    };\n    SuiAccordion.prototype.updatePanels = function () {\n        var _this = this;\n        this._panels.forEach(function (p) { return _this._service.addPanel(p); });\n    };\n    return SuiAccordion;\n}());\nexport { SuiAccordion };\n//# sourceMappingURL=accordion.js.map \n",null]}