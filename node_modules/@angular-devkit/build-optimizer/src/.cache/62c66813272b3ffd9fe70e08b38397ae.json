{"remainingRequest":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\modules\\checkbox\\components\\checkbox.js","dependencies":[{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\modules\\checkbox\\components\\checkbox.js","mtime":1521243576000},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527053443986},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Component, Directive, Input, Output, HostListener, HostBinding, EventEmitter, ViewChild } from \"@angular/core\";\nimport { customValueAccessorFactory, CustomValueAccessor } from \"../../../misc/util/index\";\nvar SuiCheckbox = /*@__PURE__*/ (function () {\n    function SuiCheckbox() {\n        this.isChecked = false;\n        this.onCheckChange = new EventEmitter();\n        this.onTouched = new EventEmitter();\n        this.isDisabled = false;\n        this.isReadonly = false;\n        this._checkboxClasses = true;\n    }\n    Object.defineProperty(SuiCheckbox.prototype, \"checkedAttribute\", {\n        get: function () {\n            return this.isChecked ? \"\" : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiCheckbox.prototype, \"isDisabledAttribute\", {\n        get: function () {\n            return this.isDisabled ? \"disabled\" : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SuiCheckbox.prototype.onMouseDown = function (e) {\n        e.preventDefault();\n    };\n    SuiCheckbox.prototype.onClick = function () {\n        if (!this.isDisabled && !this.isReadonly) {\n            this.toggle();\n            this.focusCheckbox();\n        }\n    };\n    SuiCheckbox.prototype.onFocusOut = function () {\n        this.onTouched.emit();\n    };\n    SuiCheckbox.prototype.toggle = function () {\n        this.isChecked = !this.isChecked;\n        this.onCheckChange.emit(this.isChecked);\n    };\n    SuiCheckbox.prototype.writeValue = function (value) {\n        this.isChecked = value;\n    };\n    SuiCheckbox.prototype.focusCheckbox = function () {\n        this._checkboxElement.nativeElement.focus();\n    };\n    return SuiCheckbox;\n}());\nexport { SuiCheckbox };\nvar SuiCheckboxValueAccessor = /*@__PURE__*/ (function (_super) {\n    __extends(SuiCheckboxValueAccessor, _super);\n    function SuiCheckboxValueAccessor(host) {\n        return _super.call(this, host) || this;\n    }\n    return SuiCheckboxValueAccessor;\n}(CustomValueAccessor));\nexport { SuiCheckboxValueAccessor };\n//# sourceMappingURL=checkbox.js.map \n",null]}