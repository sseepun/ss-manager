{"remainingRequest":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\modules\\modal\\classes\\active-modal.js","dependencies":[{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\modules\\modal\\classes\\active-modal.js","mtime":1521243576000},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527053443986},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["// Helper class to support method chaining when calling `SuiModalService.open(...)`.\r\nvar \r\n// Helper class to support method chaining when calling `SuiModalService.open(...)`.\r\nActiveModal = /** @class */ (function () {\r\n    function ActiveModal(instance, componentRef) {\r\n        var _this = this;\r\n        this._config = instance;\r\n        this._componentRef = componentRef;\r\n        // Automatically destroy the modal component when it has been dismissed.\r\n        this.component.onDismiss.subscribe(function () { return _this._componentRef.destroy(); });\r\n    }\r\n    Object.defineProperty(ActiveModal.prototype, \"component\", {\r\n        // Shorthand for direct access to the `SuiModal` instance.\r\n        get: \r\n        // Shorthand for direct access to the `SuiModal` instance.\r\n        function () {\r\n            return this._componentRef.instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    // Registers a callback for when `onApprove` is fired.\r\n    // Registers a callback for when `onApprove` is fired.\r\n    ActiveModal.prototype.onApprove = \r\n    // Registers a callback for when `onApprove` is fired.\r\n    function (callback) {\r\n        this.component.onApprove.subscribe(function (res) { return callback(res); });\r\n        return this;\r\n    };\r\n    // Registers a callback for when `onDeny` is fired.\r\n    // Registers a callback for when `onDeny` is fired.\r\n    ActiveModal.prototype.onDeny = \r\n    // Registers a callback for when `onDeny` is fired.\r\n    function (callback) {\r\n        this.component.onDeny.subscribe(function (res) { return callback(res); });\r\n        return this;\r\n    };\r\n    // Fires the approve event of the modal manually.\r\n    // Fires the approve event of the modal manually.\r\n    ActiveModal.prototype.approve = \r\n    // Fires the approve event of the modal manually.\r\n    function (result) {\r\n        this.component.approve(result);\r\n    };\r\n    // Fires the deny event of the modal manually.\r\n    // Fires the deny event of the modal manually.\r\n    ActiveModal.prototype.deny = \r\n    // Fires the deny event of the modal manually.\r\n    function (result) {\r\n        this.component.deny(result);\r\n    };\r\n    // Removes the modal component instantly, without transitions or firing any events.\r\n    // Removes the modal component instantly, without transitions or firing any events.\r\n    ActiveModal.prototype.destroy = \r\n    // Removes the modal component instantly, without transitions or firing any events.\r\n    function () {\r\n        this._componentRef.destroy();\r\n    };\r\n    return ActiveModal;\r\n}());\r\n// Helper class to support method chaining when calling `SuiModalService.open(...)`.\r\nexport { ActiveModal };\r\n//# sourceMappingURL=active-modal.js.map",null]}