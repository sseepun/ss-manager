{"remainingRequest":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\modules\\datepicker\\helpers\\date-fns.js","dependencies":[{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\modules\\datepicker\\helpers\\date-fns.js","mtime":1521243576000},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527053443986},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["var __assign = (this && this.__assign) || Object.assign || function (t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s)\r\n            if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nimport { format, parse } from \"date-fns\";\r\nimport * as defaultLocale from \"date-fns/locale/en-US\";\r\nfunction buildLocalizeFn(values, defaultType, indexCallback) {\r\n    return function (dirtyIndex, _a) {\r\n        var type = (_a === void 0 ? { type: defaultType } : _a).type;\r\n        var index = indexCallback ? indexCallback(dirtyIndex) : dirtyIndex;\r\n        return values[type][index];\r\n    };\r\n}\r\nfunction buildLocalizeArrayFn(values, defaultType) {\r\n    return function (_a) {\r\n        var type = (_a === void 0 ? { type: defaultType } : _a).type;\r\n        return values[type];\r\n    };\r\n}\r\nfunction buildMatchFn(patterns, defaultType) {\r\n    return function (dirtyString, _a) {\r\n        var type = (_a === void 0 ? { type: defaultType } : _a).type;\r\n        return dirtyString.match(\"^(\" + patterns[type].join(\"|\") + \")\");\r\n    };\r\n}\r\nfunction buildParseFn(patterns, defaultType) {\r\n    return function (_a, _b) {\r\n        var result = _a[1];\r\n        var type = (_b === void 0 ? { type: defaultType } : _b).type;\r\n        return (patterns[type] || patterns[defaultType])\r\n            .map(function (p) { return new RegExp(\"^\" + p); })\r\n            .findIndex(function (pattern) { return pattern.test(result); });\r\n    };\r\n}\r\nvar DateFnsParser = /*@__PURE__*/ (function () {\r\n    function DateFnsParser(locale) {\r\n        this._weekStartsOn = locale.firstDayOfWeek;\r\n        var weekdayValues = {\r\n            long: locale.weekdays,\r\n            short: locale.weekdaysShort,\r\n            narrow: locale.weekdaysNarrow\r\n        };\r\n        var monthValues = {\r\n            long: locale.months,\r\n            short: locale.monthsShort\r\n        };\r\n        var timeOfDayValues = {\r\n            long: locale.timesOfDay,\r\n            uppercase: locale.timesOfDayUppercase,\r\n            lowercase: locale.timesOfDayLowercase\r\n        };\r\n        var timeOfDayMatchValues = {\r\n            long: locale.timesOfDay,\r\n            short: locale.timesOfDayUppercase.concat(locale.timesOfDayLowercase)\r\n        };\r\n        this._locale = defaultLocale;\r\n        this._locale.localize = __assign({}, this._locale.localize, {\r\n            weekday: buildLocalizeFn(weekdayValues, \"long\"),\r\n            weekdays: buildLocalizeArrayFn(weekdayValues, \"long\"),\r\n            month: buildLocalizeFn(monthValues, \"long\"),\r\n            months: buildLocalizeArrayFn(monthValues, \"long\"),\r\n            timeOfDay: buildLocalizeFn(timeOfDayValues, \"long\", function (hours) {\r\n                return hours / 12 >= 1 ? 1 : 0;\r\n            }),\r\n            timesOfDay: buildLocalizeArrayFn(timeOfDayValues, \"long\")\r\n        });\r\n        this._locale.match = __assign({}, this._locale.match, {\r\n            weekdays: buildMatchFn(weekdayValues, \"long\"),\r\n            weekday: buildParseFn(weekdayValues, \"long\"),\r\n            months: buildMatchFn(monthValues, \"long\"),\r\n            month: buildParseFn(monthValues, \"long\"),\r\n            timesOfDay: buildMatchFn(timeOfDayMatchValues, \"long\"),\r\n            timeOfDay: buildParseFn(timeOfDayMatchValues, \"long\")\r\n        });\r\n    }\r\n    Object.defineProperty(DateFnsParser.prototype, \"_config\", {\r\n        get: function () {\r\n            return {\r\n                weekStartsOn: this._weekStartsOn,\r\n                locale: this._locale\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DateFnsParser.prototype.format = function (d, f) {\r\n        return format(d, f, this._config);\r\n    };\r\n    DateFnsParser.prototype.parse = function (dS, f, bD) {\r\n        return parse(dS, f, bD, this._config);\r\n    };\r\n    return DateFnsParser;\r\n}());\r\nexport { DateFnsParser };\r\n//# sourceMappingURL=date-fns.js.map \r\n",null]}