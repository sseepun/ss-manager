{"remainingRequest":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\modules\\datepicker\\directives\\datepicker.directive.js","dependencies":[{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\modules\\datepicker\\directives\\datepicker.directive.js","mtime":1521243576000},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527053443986},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Directive, ElementRef, Renderer2, EventEmitter, Output, Input, HostListener } from \"@angular/core\";\nimport { customValueAccessorFactory, CustomValueAccessor, customValidatorFactory, CustomValidator, PositioningPlacement, SuiComponentFactory, KeyCode } from \"../../../misc/util/index\";\nimport { SuiLocalizationService } from \"../../../behaviors/localization/index\";\nimport { SuiPopupComponentController, PopupConfig, PopupTrigger } from \"../../popup/index\";\nimport { SuiDatepicker, DatepickerMode } from \"../components/datepicker\";\nimport { YearConfig, MonthConfig, DatetimeConfig, TimeConfig, DateConfig } from \"../classes/calendar-config\";\nvar SuiDatepickerDirective = /*@__PURE__*/ (function (_super) {\n    __extends(SuiDatepickerDirective, _super);\n    function SuiDatepickerDirective(renderer, element, componentFactory, localizationService) {\n        var _this = _super.call(this, renderer, element, componentFactory, SuiDatepicker, new PopupConfig({\n            trigger: PopupTrigger.Focus,\n            placement: PositioningPlacement.BottomLeft,\n            transition: \"scale\",\n            transitionDuration: 200\n        })) || this;\n        _this.renderer = renderer;\n        _this.localizationService = localizationService;\n        // This ensures the popup is drawn correctly (i.e. no border).\n        // This ensures the popup is drawn correctly (i.e. no border).\n        _this.renderer.addClass(_this.popup.elementRef.nativeElement, \"ui\");\n        _this.renderer.addClass(_this.popup.elementRef.nativeElement, \"calendar\");\n        _this.onLocaleUpdate();\n        _this.localizationService.onLanguageUpdate.subscribe(function () { return _this.onLocaleUpdate(); });\n        _this.onSelectedDateChange = new EventEmitter();\n        _this.onValidatorChange = new EventEmitter();\n        _this.mode = DatepickerMode.Datetime;\n        return _this;\n    }\n    Object.defineProperty(SuiDatepickerDirective.prototype, \"selectedDate\", {\n        get: function () {\n            return this._selectedDate;\n        },\n        set: function (date) {\n            this._selectedDate = date;\n            this.onSelectedDateChange.emit(date);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiDatepickerDirective.prototype, \"mode\", {\n        get: function () {\n            return this._mode;\n        },\n        set: function (mode) {\n            this._mode = mode || DatepickerMode.Datetime;\n            switch (this._mode) {\n                case DatepickerMode.Year:\n                    this.config = new YearConfig();\n                    break;\n                case DatepickerMode.Month:\n                    this.config = new MonthConfig();\n                    break;\n                case DatepickerMode.Date:\n                default:\n                    this.config = new DateConfig();\n                    break;\n                case DatepickerMode.Datetime:\n                    this.config = new DatetimeConfig();\n                    break;\n                case DatepickerMode.Time:\n                    this.config = new TimeConfig();\n                    break;\n            }\n            this.writeValue(this.selectedDate);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiDatepickerDirective.prototype, \"localeValues\", {\n        get: function () {\n            return this.localizationService.override(this._localeValues, this.localeOverrides);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiDatepickerDirective.prototype, \"placement\", {\n        set: function (placement) {\n            this.popup.config.placement = placement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiDatepickerDirective.prototype, \"transition\", {\n        set: function (transition) {\n            this.popup.config.transition = transition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiDatepickerDirective.prototype, \"transitionDuration\", {\n        set: function (duration) {\n            this.popup.config.transitionDuration = duration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SuiDatepickerDirective.prototype.popupOnOpen = function () {\n        var _this = this;\n        if (this.componentInstance) {\n            this.componentInstance.service.config = this.config;\n            this.componentInstance.service.localeValues = this.localeValues;\n            this.componentInstance.service.currentDate = this.initialDate || new Date();\n            this.componentInstance.service.selectedDate = this.selectedDate;\n            this.componentInstance.service.maxDate = this.maxDate;\n            this.componentInstance.service.minDate = this.minDate;\n            if (this.firstDayOfWeek != undefined) {\n                this.componentInstance.service.firstDayOfWeek = this.firstDayOfWeek;\n            }\n            this.componentInstance.service.reset();\n            this.componentInstance.service.onDateChange.subscribe(function (d) {\n                _this.selectedDate = d;\n                _this.close();\n            });\n        }\n    };\n    SuiDatepickerDirective.prototype.ngOnChanges = function (_a) {\n        var maxDate = _a.maxDate, minDate = _a.minDate, mode = _a.mode;\n        if (maxDate || minDate || mode) {\n            this.onValidatorChange.emit();\n        }\n    };\n    SuiDatepickerDirective.prototype.onLocaleUpdate = function () {\n        this._localeValues = this.localizationService.get().datepicker;\n    };\n    SuiDatepickerDirective.prototype.validate = function (c) {\n        var value = c.value;\n        if (value != undefined) {\n            // We post process the min & max date because sometimes this puts the date outside of the allowed range.\n            if (this.minDate && value < this.minDate) {\n                return { suiMinDate: { required: this.minDate, actual: value } };\n            }\n            if (this.maxDate && value > this.maxDate) {\n                return { suiMaxDate: { required: this.maxDate, actual: value } };\n            }\n        }\n        // Angular expects null\n        // tslint:disable-next-line:no-null-keyword\n        return null;\n    };\n    SuiDatepickerDirective.prototype.writeValue = function (value) {\n        this.selectedDate = value;\n        if (this.componentInstance) {\n            this.componentInstance.service.selectedDate = value;\n        }\n    };\n    SuiDatepickerDirective.prototype.onKeyDown = function (e) {\n        if (e.keyCode === KeyCode.Escape) {\n            this.close();\n        }\n    };\n    return SuiDatepickerDirective;\n}(SuiPopupComponentController));\nexport { SuiDatepickerDirective };\nvar SuiDatepickerDirectiveValueAccessor = /*@__PURE__*/ (function (_super) {\n    __extends(SuiDatepickerDirectiveValueAccessor, _super);\n    function SuiDatepickerDirectiveValueAccessor(host) {\n        var _this = _super.call(this, host) || this;\n        _this.host = host;\n        return _this;\n    }\n    return SuiDatepickerDirectiveValueAccessor;\n}(CustomValueAccessor));\nexport { SuiDatepickerDirectiveValueAccessor };\nvar SuiDatepickerDirectiveValidator = /*@__PURE__*/ (function (_super) {\n    __extends(SuiDatepickerDirectiveValidator, _super);\n    function SuiDatepickerDirectiveValidator(host) {\n        var _this = _super.call(this, host) || this;\n        _this.host = host;\n        return _this;\n    }\n    return SuiDatepickerDirectiveValidator;\n}(CustomValidator));\nexport { SuiDatepickerDirectiveValidator };\n//# sourceMappingURL=datepicker.directive.js.map \n",null]}