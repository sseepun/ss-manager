{"remainingRequest":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\modules\\popup\\classes\\popup-template-controller.js","dependencies":[{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\modules\\popup\\classes\\popup-template-controller.js","mtime":1521243576000},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527053443986},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\r\nimport { TemplateRef } from \"@angular/core\";\r\nimport { SuiPopupController } from \"./popup-controller\";\r\nimport { PopupConfig } from \"./popup-config\";\r\nvar templateRef = TemplateRef;\r\nvar TemplatePopupConfig = /*@__PURE__*/ (function (_super) {\r\n    __extends(TemplatePopupConfig, _super);\r\n    function TemplatePopupConfig() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return TemplatePopupConfig;\r\n}(PopupConfig));\r\nexport { TemplatePopupConfig };\r\nvar SuiPopupTemplateController = /*@__PURE__*/ (function (_super) {\r\n    __extends(SuiPopupTemplateController, _super);\r\n    function SuiPopupTemplateController(renderer, element, componentFactory, config) {\r\n        return _super.call(this, renderer, element, componentFactory, config) || this;\r\n    }\r\n    SuiPopupTemplateController.prototype.configure = function (config) {\r\n        _super.prototype.configure.call(this, config);\r\n        if (config) {\r\n            this.template = config.template;\r\n            this.context = config.context;\r\n        }\r\n    };\r\n    SuiPopupTemplateController.prototype.open = function () {\r\n        // If there is a template, inject it into the view.\r\n        if (this.template) {\r\n            this.popup.templateSibling.clear();\r\n            this._componentFactory.createView(this.popup.templateSibling, this.template, {\r\n                $implicit: this.popup,\r\n                context: this.context\r\n            });\r\n        }\r\n        _super.prototype.open.call(this);\r\n    };\r\n    return SuiPopupTemplateController;\r\n}(SuiPopupController));\r\nexport { SuiPopupTemplateController };\r\n//# sourceMappingURL=popup-template-controller.js.map \r\n",null]}