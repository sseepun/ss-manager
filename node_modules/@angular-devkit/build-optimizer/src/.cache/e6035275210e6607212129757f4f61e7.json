{"remainingRequest":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\modules\\modal\\services\\modal.service.js","dependencies":[{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\modules\\modal\\services\\modal.service.js","mtime":1521243576000},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527053443986},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Injectable } from \"@angular/core\";\nimport { SuiComponentFactory } from \"../../../misc/util/index\";\nimport { TemplateModalConfig, ComponentModalConfig } from \"../classes/modal-config\";\nimport { SuiModal } from \"../components/modal\";\nimport { Modal } from \"../classes/modal-controls\";\nimport { ActiveModal } from \"../classes/active-modal\";\nvar SuiModalService = /*@__PURE__*/ (function () {\n    function SuiModalService(_componentFactory) {\n        this._componentFactory = _componentFactory;\n    }\n    SuiModalService.prototype.open = function (modal) {\n        // Generate the modal component to be shown.\n        var componentRef = this._componentFactory.createComponent(SuiModal);\n        // Shorthand for the created modal component instance.\n        var modalComponent = componentRef.instance;\n        if (modal instanceof TemplateModalConfig) {\n            // Inject the template into the view.\n            this._componentFactory.createView(modalComponent.templateSibling, modal.template, {\n                // `let-context`\n                $implicit: modal.context,\n                // `let-modal=\"modal\"`\n                modal: componentRef.instance.controls\n            });\n        }\n        else if (modal instanceof ComponentModalConfig) {\n            // Generate the component to be used as the modal content,\n            // injecting an instance of `Modal` to be used in the component constructor.\n            var contentComponentRef = this._componentFactory.createComponent(modal.component, [\n                {\n                    provide: Modal,\n                    useValue: new Modal(modalComponent.controls, modal.context)\n                }\n            ]);\n            // Insert the new component into the content of the modal.\n            this._componentFactory.attachToView(contentComponentRef, modalComponent.templateSibling);\n            // Shorthand for access to the content component's DOM element.\n            var contentElement = contentComponentRef.location.nativeElement;\n            // Move all of the DOM elements inside the component to the main modal element.\n            // This is done so that CSS classes apply correctly. It does stop any custom styles from working however,\n            // so other ways may have to be investigated.\n            while (contentElement.hasChildNodes() && contentElement.parentElement && contentElement.firstChild) {\n                contentElement.parentElement.appendChild(contentElement.removeChild(contentElement.firstChild));\n            }\n            // Remove the generated component's 'empty shell' from the DOM.\n            this._componentFactory.detachFromDocument(contentComponentRef);\n        }\n        // Attach the new modal component to the application.\n        // The component will move itself to the document body for correctl styling.\n        this._componentFactory.attachToApplication(componentRef);\n        // Initialise the generated modal with the provided config.\n        modalComponent.loadConfig(modal);\n        // Return an instance of an `ActiveModal`, so the user can control the new modal.\n        return new ActiveModal(modal, componentRef);\n    };\n    return SuiModalService;\n}());\nexport { SuiModalService };\n//# sourceMappingURL=modal.service.js.map \n",null]}