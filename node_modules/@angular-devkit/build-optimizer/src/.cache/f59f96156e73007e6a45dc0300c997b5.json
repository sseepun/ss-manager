{"remainingRequest":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\modules\\search\\components\\search.js","dependencies":[{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\modules\\search\\components\\search.js","mtime":1521243576000},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527053443986},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Component, ViewChild, HostBinding, Input, HostListener, EventEmitter, Output, ElementRef, Renderer2 } from \"@angular/core\";\nimport { Util } from \"../../../misc/util/index\";\nimport { DropdownService, SuiDropdownMenu } from \"../../dropdown/index\";\nimport { SuiLocalizationService } from \"../../../behaviors/localization/index\";\nimport { SearchService } from \"../services/search.service\";\nvar SuiSearch = /*@__PURE__*/ (function () {\n    function SuiSearch(_element, renderer, _localizationService) {\n        var _this = this;\n        this._element = _element;\n        this._localizationService = _localizationService;\n        this.dropdownService = new DropdownService();\n        this.searchService = new SearchService();\n        this.onLocaleUpdate();\n        this._localizationService.onLanguageUpdate.subscribe(function () { return _this.onLocaleUpdate(); });\n        this._searchClasses = true;\n        this.hasIcon = true;\n        this.retainSelectedResult = true;\n        this.searchDelay = 200;\n        this.maxResults = 7;\n        this.onResultSelected = new EventEmitter();\n        this.transition = \"scale\";\n        this.transitionDuration = 200;\n        this._documentClickListener = renderer.listen(\"document\", \"click\", function (e) { return _this.onDocumentClick(e); });\n    }\n    Object.defineProperty(SuiSearch.prototype, \"isActive\", {\n        get: function () {\n            return this.dropdownService.isOpen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiSearch.prototype, \"placeholder\", {\n        get: \n        // Gets & sets the placeholder text displayed inside the text input.\n        function () {\n            return this._placeholder || this.localeValues.placeholder;\n        },\n        set: function (placeholder) {\n            this._placeholder = placeholder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiSearch.prototype, \"localeValues\", {\n        get: function () {\n            return this._localizationService.override(this._localeValues, this.localeOverrides);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiSearch.prototype, \"query\", {\n        get: function () {\n            return this.searchService.query;\n        },\n        set: function (query) {\n            var _this = this;\n            this.selectedResult = undefined;\n            // Initialise a delayed search.\n            this.searchService.updateQueryDelayed(query, function () {\n                // Set the results open state depending on whether a query has been entered.\n                return;\n                // Set the results open state depending on whether a query has been entered.\n                _this.dropdownService.setOpenState(_this.searchService.query.length > 0);\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiSearch.prototype, \"options\", {\n        set: function (options) {\n            if (options) {\n                this.searchService.options = options;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiSearch.prototype, \"optionsFilter\", {\n        set: function (filter) {\n            if (filter) {\n                this.searchService.optionsFilter = filter;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiSearch.prototype, \"optionsLookup\", {\n        set: function (lookupFn) {\n            this.searchService.optionsLookup = lookupFn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiSearch.prototype, \"optionsField\", {\n        set: function (field) {\n            this.searchService.optionsField = field;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiSearch.prototype, \"resultFormatter\", {\n        get: function () {\n            var _this = this;\n            if (this._resultFormatter) {\n                return this._resultFormatter;\n            }\n            else if (this.searchService.optionsLookup) {\n                return function (r) { return _this.readValue(r); };\n            }\n            else {\n                return function (r, q) { return _this.searchService.highlightMatches(_this.readValue(r), q); };\n            }\n        },\n        set: function (formatter) {\n            this._resultFormatter = formatter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiSearch.prototype, \"searchDelay\", {\n        set: function (delay) {\n            this.searchService.searchDelay = delay;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiSearch.prototype, \"isSearching\", {\n        get: function () {\n            return this.searchService.isSearching;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiSearch.prototype, \"results\", {\n        get: function () {\n            return this.searchService.results.slice(0, this.maxResults);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SuiSearch.prototype.ngAfterViewInit = function () {\n        this._menu.service = this.dropdownService;\n    };\n    SuiSearch.prototype.onLocaleUpdate = function () {\n        this._localeValues = this._localizationService.get().search;\n    };\n    // Selects a result.\n    // Selects a result.\n    SuiSearch.prototype.select =\n        // Selects a result.\n        function (result) {\n            this.onResultSelected.emit(result);\n            this.dropdownService.setOpenState(false);\n            if (this.retainSelectedResult) {\n                this.selectedResult = result;\n                this.searchService.updateQuery(this.readValue(result));\n            }\n            else {\n                this.searchService.updateQuery(\"\");\n            }\n        };\n    SuiSearch.prototype.onClick = function (e) {\n        this.open();\n    };\n    SuiSearch.prototype.onFocusIn = function () {\n        if (!this.dropdownService.isAnimating) {\n            this.open();\n        }\n    };\n    SuiSearch.prototype.open = function () {\n        if (this.searchService.query.length > 0) {\n            // Only open on click when there is a query entered.\n            this.dropdownService.setOpenState(true);\n        }\n    };\n    SuiSearch.prototype.onFocusOut = function (e) {\n        if (!this._element.nativeElement.contains(e.relatedTarget)) {\n            this.dropdownService.setOpenState(false);\n        }\n    };\n    SuiSearch.prototype.onDocumentClick = function (e) {\n        if (!this._element.nativeElement.contains(e.target)) {\n            this.dropdownService.setOpenState(false);\n        }\n    };\n    // Reads the specified field from an item.\n    // Reads the specified field from an item.\n    SuiSearch.prototype.readValue =\n        // Reads the specified field from an item.\n        function (object) {\n            return Util.Object.readValue(object, this.searchService.optionsField);\n        };\n    SuiSearch.prototype.ngOnDestroy = function () {\n        this._documentClickListener();\n    };\n    return SuiSearch;\n}());\nexport { SuiSearch };\n//# sourceMappingURL=search.js.map \n",null]}