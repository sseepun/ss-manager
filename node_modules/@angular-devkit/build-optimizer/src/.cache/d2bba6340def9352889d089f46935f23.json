{"remainingRequest":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\misc\\util\\services\\positioning.service.js","dependencies":[{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\misc\\util\\services\\positioning.service.js","mtime":1521243576000},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527053443986},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import Popper from \"popper.js\";\r\nexport var PositioningPlacement = {\r\n    Auto: \"auto\",\r\n    TopLeft: \"top left\",\r\n    Top: \"top\",\r\n    TopRight: \"top right\",\r\n    LeftTop: \"left top\",\r\n    Left: \"left\",\r\n    LeftBottom: \"left bottom\",\r\n    BottomLeft: \"bottom left\",\r\n    Bottom: \"bottom\",\r\n    BottomRight: \"bottom right\",\r\n    RightTop: \"right top\",\r\n    Right: \"right\",\r\n    RightBottom: \"right bottom\"\r\n};\r\nfunction placementToPopper(placement) {\r\n    if (!placement || placement === PositioningPlacement.Auto) {\r\n        return \"auto\";\r\n    }\r\n    // All placements of the format: `direction alignment`, e.g. `top left`.\r\n    var _a = placement.split(\" \"), direction = _a[0], alignment = _a[1];\r\n    // Direction alone covers case of just `top`, `left`, `bottom`, `right`.\r\n    var chosenPlacement = [direction];\r\n    // Add `start` / `end` to placement, depending on alignment direction.\r\n    switch (alignment) {\r\n        case \"top\":\r\n        case \"left\":\r\n            chosenPlacement.push(\"start\");\r\n            break;\r\n        case \"bottom\":\r\n        case \"right\":\r\n            chosenPlacement.push(\"end\");\r\n            break;\r\n    }\r\n    // Join with hyphen to create Popper compatible placement.\r\n    return chosenPlacement.join(\"-\");\r\n}\r\nfunction popperToPlacement(popper) {\r\n    if (!popper || popper === \"auto\") {\r\n        return \"auto\";\r\n    }\r\n    var _a = popper.split(\"-\"), direction = _a[0], alignment = _a[1];\r\n    var chosenPlacement = [direction];\r\n    switch (direction) {\r\n        case \"top\":\r\n        case \"bottom\":\r\n            switch (alignment) {\r\n                case \"start\":\r\n                    chosenPlacement.push(\"left\");\r\n                    break;\r\n                case \"end\":\r\n                    chosenPlacement.push(\"right\");\r\n                    break;\r\n            }\r\n            break;\r\n        case \"left\":\r\n        case \"right\":\r\n            switch (alignment) {\r\n                case \"start\":\r\n                    chosenPlacement.push(\"top\");\r\n                    break;\r\n                case \"end\":\r\n                    chosenPlacement.push(\"bottom\");\r\n                    break;\r\n            }\r\n            break;\r\n    }\r\n    return chosenPlacement.join(\" \");\r\n}\r\nvar PositioningService = /*@__PURE__*/ (function () {\r\n    function PositioningService(anchor, subject, placement, arrowSelector) {\r\n        var _this = this;\r\n        this.anchor = anchor;\r\n        this.subject = subject;\r\n        this._placement = placement;\r\n        var modifiers = {\r\n            computeStyle: {\r\n                gpuAcceleration: false\r\n            },\r\n            preventOverflow: {\r\n                escapeWithReference: true,\r\n                boundariesElement: document.body\r\n            },\r\n            arrow: {\r\n                element: arrowSelector\r\n            }\r\n        };\r\n        if (!arrowSelector) {\r\n            delete modifiers.arrow;\r\n        }\r\n        this._popper = new Popper(anchor.nativeElement, subject.nativeElement, {\r\n            placement: placementToPopper(placement),\r\n            modifiers: modifiers,\r\n            onCreate: function (initial) { return _this._popperState = initial; },\r\n            onUpdate: function (update) { return _this._popperState = update; }\r\n        });\r\n    }\r\n    Object.defineProperty(PositioningService.prototype, \"placement\", {\r\n        get: function () {\r\n            return this._placement;\r\n        },\r\n        set: function (placement) {\r\n            this._placement = placement;\r\n            this._popper.options.placement = placementToPopper(placement);\r\n            this.update();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PositioningService.prototype, \"actualPlacement\", {\r\n        get: function () {\r\n            if (!this._popperState) {\r\n                return PositioningPlacement.Auto;\r\n            }\r\n            return popperToPlacement(this._popperState.placement);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PositioningService.prototype, \"state\", {\r\n        get: function () {\r\n            return this._popperState;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PositioningService.prototype.update = function () {\r\n        this._popper.update();\r\n    };\r\n    PositioningService.prototype.destroy = function () {\r\n        this._popper.destroy();\r\n    };\r\n    return PositioningService;\r\n}());\r\nexport { PositioningService };\r\n//# sourceMappingURL=positioning.service.js.map \r\n",null]}