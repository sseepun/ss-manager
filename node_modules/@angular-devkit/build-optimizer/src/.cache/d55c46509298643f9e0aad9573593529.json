{"remainingRequest":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\modules\\dimmer\\components\\dimmer.js","dependencies":[{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\modules\\dimmer\\components\\dimmer.js","mtime":1521243576000},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527053443986},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Component, Input, Output, HostBinding, HostListener, EventEmitter, Renderer2, ElementRef, ChangeDetectorRef } from \"@angular/core\";\nimport { TransitionController, SuiTransition, TransitionDirection, Transition } from \"../../transition/index\";\nvar SuiDimmer = /*@__PURE__*/ (function (_super) {\n    __extends(SuiDimmer, _super);\n    function SuiDimmer(renderer, element, changeDetector) {\n        var _this = _super.call(this, renderer, element, changeDetector) || this;\n        _this._isDimmed = false;\n        _this.isDimmedChange = new EventEmitter();\n        _this.isClickable = true;\n        _this.wrapContent = true;\n        _this._dimmerClasses = true;\n        return _this;\n    }\n    Object.defineProperty(SuiDimmer.prototype, \"isDimmed\", {\n        get: function () {\n            return this._isDimmed;\n        },\n        set: function (value) {\n            var isDimmed = !!value;\n            if (!this._transitionController) {\n                // Initialise transition functionality when first setting dimmed, to ensure initial state doesn't transition.\n                this._transitionController = new TransitionController(isDimmed, \"block\");\n                this.setTransitionController(this._transitionController);\n                this._isDimmed = isDimmed;\n            }\n            else if (this._isDimmed !== isDimmed) {\n                this._isDimmed = isDimmed;\n                this._transitionController.stopAll();\n                this._transitionController.animate(new Transition(\"fade\", this.transitionDuration, isDimmed ? TransitionDirection.In : TransitionDirection.Out));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SuiDimmer.prototype.onClick = function () {\n        if (this.isClickable) {\n            this.isDimmed = false;\n            this.isDimmedChange.emit(this.isDimmed);\n        }\n    };\n    return SuiDimmer;\n}(SuiTransition));\nexport { SuiDimmer };\n//# sourceMappingURL=dimmer.js.map \n",null]}