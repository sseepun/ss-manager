{"remainingRequest":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\modules\\sidebar\\components\\sidebar-sibling.js","dependencies":[{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\modules\\sidebar\\components\\sidebar-sibling.js","mtime":1521243577000},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527053443986},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Component, Input, HostBinding, HostListener, ElementRef, Renderer2 } from \"@angular/core\";\nimport { SidebarTransition } from \"../services/sidebar.service\";\nvar SuiSidebarSibling = /*@__PURE__*/ (function () {\n    function SuiSidebarSibling(_renderer, _element) {\n        this._renderer = _renderer;\n        this._element = _element;\n        this.isDimmedWhenVisible = false;\n        this._siblingClasses = true;\n    }\n    Object.defineProperty(SuiSidebarSibling.prototype, \"service\", {\n        get: function () {\n            return this._service;\n        },\n        set: function (service) {\n            var _this = this;\n            this._service = service;\n            setTimeout(function () { return _this.updateTransform(); });\n            this._service.isVisibleChange.subscribe(function () { return _this.updateTransform(); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiSidebarSibling.prototype, \"isVisible\", {\n        get: function () {\n            if (!this.service) {\n                return false;\n            }\n            return this.service.isVisible;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SuiSidebarSibling.prototype, \"isDimmed\", {\n        get: function () {\n            if (!this.service) {\n                return false;\n            }\n            return this.service.isVisible && this.isDimmedWhenVisible;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SuiSidebarSibling.prototype.updateTransform = function () {\n        this._renderer.removeStyle(this._element.nativeElement, \"transform\");\n        this._renderer.removeStyle(this._element.nativeElement, \"-webkit-transform\");\n        if (this.service.isVisible &&\n            this.service.transition !== SidebarTransition.Overlay &&\n            this.service.transition !== SidebarTransition.ScaleDown) {\n            var translate = \"translate3d(\" + this.service.width + \"px, \" + this.service.height + \"px, 0)\";\n            this._renderer.setStyle(this._element.nativeElement, \"transform\", translate);\n            this._renderer.setStyle(this._element.nativeElement, \"-webkit-transform\", translate);\n        }\n    };\n    SuiSidebarSibling.prototype.onClick = function (event) {\n        if (this.service.isVisible && !this.service.wasJustOpened) {\n            this.service.setVisibleState(false);\n        }\n    };\n    return SuiSidebarSibling;\n}());\nexport { SuiSidebarSibling };\n//# sourceMappingURL=sidebar-sibling.js.map \n",null]}