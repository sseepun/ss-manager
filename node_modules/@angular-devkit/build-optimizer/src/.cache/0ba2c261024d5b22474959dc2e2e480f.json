{"remainingRequest":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\modules\\datepicker\\classes\\date-comparer.js","dependencies":[{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\ng2-semantic-ui\\dist\\modules\\datepicker\\classes\\date-comparer.js","mtime":1521243576000},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527053443986},{"path":"C:\\Users\\Sarun Seepun\\Desktop\\AngularProject\\SSmanager\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { DatePrecision, DateUtil, Util } from \"../../../misc/util/index\";\r\nvar DateComparer = /*@__PURE__*/ (function () {\r\n    function DateComparer(precision, isSmallest) {\r\n        this._precision = precision;\r\n        this._isSmallest = isSmallest;\r\n    }\r\n    DateComparer.prototype.equal = function (a, b) {\r\n        if (this._precision === DatePrecision.Minute) {\r\n            return !!b &&\r\n                DateUtil.equal(DatePrecision.Hour, b, a) &&\r\n                Util.Math.roundDown(b.getMinutes(), 5) === Util.Math.roundDown(a.getMinutes(), 5);\r\n        }\r\n        return !!b && DateUtil.equal(this._precision, a, b);\r\n    };\r\n    DateComparer.prototype.lessThan = function (a, b) {\r\n        if (this._isSmallest) {\r\n            return !b || (b >= a);\r\n        }\r\n        return !b || (DateUtil.endOf(this._precision, DateUtil.clone(b)) >= a);\r\n    };\r\n    DateComparer.prototype.greaterThan = function (a, b) {\r\n        if (this._isSmallest) {\r\n            return !b || (b <= a);\r\n        }\r\n        return !b || (DateUtil.startOf(this._precision, DateUtil.clone(b)) <= a);\r\n    };\r\n    DateComparer.prototype.between = function (date, left, right) {\r\n        return this.greaterThan(date, left) && this.lessThan(date, right);\r\n    };\r\n    return DateComparer;\r\n}());\r\nexport { DateComparer };\r\n//# sourceMappingURL=date-comparer.js.map \r\n",null]}